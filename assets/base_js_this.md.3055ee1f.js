import{_ as n,c as s,o as a,a as t}from"./app.89496c5a.js";const f='{"title":"this","description":"","frontmatter":{},"headers":[{"level":3,"title":"bind","slug":"bind"},{"level":3,"title":"call","slug":"call"},{"level":3,"title":"apply","slug":"apply"}],"relativePath":"base/js/this.md","lastUpdated":1642064673097}',p={},o=t(`<h1 id="this" tabindex="-1">this <a class="header-anchor" href="#this" aria-hidden="true">#</a></h1><p>\u8C01\u8C03\u7528\uFF0Cthis\u5C31\u662F\u8C01\uFF0C\u6307\u5411\u7684\u5BF9\u8C61\u662F\u4E0A\u4E0B\u6587\u5BF9\u8C61context</p><h3 id="bind" tabindex="-1">bind <a class="header-anchor" href="#bind" aria-hidden="true">#</a></h3><p>\u7ED1\u5B9A\u4E86this\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u51FD\u6570d</p><p>bind\u88AB\u8C03\u7528\u65F6\uFF0C\u65B0\u51FD\u6570\u7684this\u88AB\u6307\u5B9A\u4E3Abind\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u5176\u4F59\u53C2\u6570\u4F5C\u4E3A\u65B0\u51FD\u6570\u7684\u53C2\u6570\uFF0C\u4F9B\u8C03\u7528\u65F6\u4F7F\u7528</p><p>\u9700\u8981\u5224\u65AD\u662F\u5426\u4F7F\u7528new \u8C03\u7528bind</p><div class="language-js"><pre><code><span class="token class-name">Funtion</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myBind</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> selfFn <span class="token operator">=</span> <span class="token keyword">this</span>
  <span class="token keyword">let</span> baseArgs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arguments<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// \u622A\u53D6\u5269\u4F59\u7684\u53C2\u6570</span>
  <span class="token keyword">let</span> <span class="token function-variable function">tempFn</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">bound</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>baseArgs<span class="token punctuation">,</span> <span class="token operator">...</span>arguments<span class="token punctuation">]</span>
    <span class="token comment">// \u5224\u65AD\u662F\u5426\u4F7F\u7528new\u6765\u8C03\u7528bind\uFF0C\u5982\u679C\u662Fnew\u7684this\u6307\u5411\u5B9E\u4F8B</span>
    <span class="token keyword">return</span> <span class="token function">selfFn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">selfFn</span> <span class="token operator">?</span> <span class="token keyword">this</span> <span class="token operator">:</span> cx<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5982\u679C\u662Fnew\u8C03\u7528\u7684\uFF0C\u9700\u8981\u628A\u6784\u9020\u51FD\u6570\u7684\u539F\u578B\u90FD\u6302\u5728\u5B9E\u4F8B\u4E0A</span>
  tempFn<span class="token punctuation">.</span>prototype <span class="token operator">=</span> selfFn<span class="token punctuation">.</span>prototype
  bound<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">tempFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u751F\u6210\u526F\u672C\u653E\u5728bound\u7684\u539F\u578B\u4E0A</span>
  <span class="token keyword">return</span> bound
<span class="token punctuation">}</span>
</code></pre></div><h3 id="call" tabindex="-1">call <a class="header-anchor" href="#call" aria-hidden="true">#</a></h3><p>\u63A5\u53D7\u7684\u662F\u53C2\u6570\u5217\u8868</p><div class="language-js"><pre><code><span class="token class-name">Funtion</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myCall</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> newCtx <span class="token operator">=</span> ctx <span class="token operator">||</span> window
	nexCtx<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span>
	<span class="token keyword">const</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arguments<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
	<span class="token keyword">const</span> res <span class="token operator">=</span> newCtx<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
	<span class="token keyword">delete</span> newCtx<span class="token punctuation">.</span>fn
	<span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre></div><h3 id="apply" tabindex="-1">apply <a class="header-anchor" href="#apply" aria-hidden="true">#</a></h3><p>\u63A5\u53D7\u7684\u662F\u591A\u4E2A\u53C2\u6570\u7684\u6570\u7EC4</p><div class="language-js"><pre><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myApply</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">cx</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> newCtx <span class="token operator">=</span> ctx <span class="token operator">||</span> window
 	newCtx<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span>
 	<span class="token keyword">let</span> res
 	<span class="token keyword">if</span> <span class="token punctuation">(</span>arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		res <span class="token operator">=</span> newCtx<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		res <span class="token operator">=</span> newCtx<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 	<span class="token punctuation">}</span>
 	<span class="token keyword">delete</span> newCtx<span class="token punctuation">.</span>fn
 	<span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre></div>`,13),e=[o];function c(l,u,k,r,i,d){return a(),s("div",null,e)}var y=n(p,[["render",c]]);export{f as __pageData,y as default};
